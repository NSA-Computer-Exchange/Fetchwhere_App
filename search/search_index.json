{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Fetchwhere App Commands Python: - python Fetch [payload] Command Line: - Fetch.exe [payload] Project layout build/ # Build folder from build process. config/ config.ini # The configuration file. [ionapifile].ionapi # The ionapi credential file from InforOS. # Rename to anything you like but must be # properely referenced in the config.ini file. dist/ # Contains the compiled source. docs/ docs/ fetchwhere_app/ index.md # Main markdown index file mkdocs.yml # Config file lib/ __.init__.py # Package indicator GetTokenClass.py # Class file to parse config.ini properties and get auth token payloads/ # Folder to store fetchwhere payloads (request files) Fetch.exe # The compiled app Fetch.py # The python source nsa_icon.ico # NSA logo","title":"Main"},{"location":"#fetchwhere-app","text":"","title":"Fetchwhere App"},{"location":"#commands","text":"Python: - python Fetch [payload] Command Line: - Fetch.exe [payload]","title":"Commands"},{"location":"#project-layout","text":"build/ # Build folder from build process. config/ config.ini # The configuration file. [ionapifile].ionapi # The ionapi credential file from InforOS. # Rename to anything you like but must be # properely referenced in the config.ini file. dist/ # Contains the compiled source. docs/ docs/ fetchwhere_app/ index.md # Main markdown index file mkdocs.yml # Config file lib/ __.init__.py # Package indicator GetTokenClass.py # Class file to parse config.ini properties and get auth token payloads/ # Folder to store fetchwhere payloads (request files) Fetch.exe # The compiled app Fetch.py # The python source nsa_icon.ico # NSA logo","title":"Project layout"},{"location":"running/","text":"Running the code or the app is pretty straight forward. Commands Python: - python Fetch [payload] Command Line: - Fetch.exe [payload] Python: Make sure you have Python installed and it's in your PATH From the terminal run: python Fetch.py [payload] Where: [payload] is the name of the fetchwhere request in the payloads folder: Example: python Fetch.py sasc Command Line: From the command prompt or Terminal app run: Fetch.exe [payload] Where: [payload] is the name of the fetchwhere request in the payloads folder: Example: Fetch.exe sasc You will be prompted to enter a folder to save the response to as well as a file name. You can save the response to any folder you like with any name you'd like. Note: It's not necessary to add the extension to the file name as it will be saved with the .json extension automatically. You can change this in the code by editing line 40: with open(folderinput+fileinput+\".json\", \"w\", encoding=\"utf-8\") as jsonresponse: jsonresponse.write(prettyfetchWhereResponse) Results After running either of the above commands, you can view the resulting file by navigating to where you saved it. Example:","title":"Running the code"},{"location":"running/#commands","text":"Python: - python Fetch [payload] Command Line: - Fetch.exe [payload]","title":"Commands"},{"location":"running/#python","text":"Make sure you have Python installed and it's in your PATH From the terminal run: python Fetch.py [payload] Where: [payload] is the name of the fetchwhere request in the payloads folder: Example: python Fetch.py sasc","title":"Python:"},{"location":"running/#command-line","text":"From the command prompt or Terminal app run: Fetch.exe [payload] Where: [payload] is the name of the fetchwhere request in the payloads folder: Example: Fetch.exe sasc You will be prompted to enter a folder to save the response to as well as a file name. You can save the response to any folder you like with any name you'd like. Note: It's not necessary to add the extension to the file name as it will be saved with the .json extension automatically. You can change this in the code by editing line 40: with open(folderinput+fileinput+\".json\", \"w\", encoding=\"utf-8\") as jsonresponse: jsonresponse.write(prettyfetchWhereResponse)","title":"Command Line:"},{"location":"running/#results","text":"After running either of the above commands, you can view the resulting file by navigating to where you saved it. Example:","title":"Results"},{"location":"setup/","text":"Fetchwhere App Commands The simplest way to get started is to clone this repository to a local directory. git clone https://github.com/NSA-Computer-Exchange/Fetchwhere_App Download If you don't have git installed, you can download the files in .zip format: Expand the green \"Code\" button. Select Download ZIP at the bottom. For more information on cloning a repository, here's a good read: Cloning a repository Config You'll need to edit the config.ini file so it points to your tenant and your .ionapi credential file. config/ config.ini Edit this line: conoFetchUrl = https://mingle-ionapi.inforcloudsuite.com/TENANT_TRN/SX/rest/serviceinterface/proxy/FetchWhere Replace the TENANT_TRN value in the Fetchwhere URL with your tenant. Example: https://mingle-ionapi.inforcloudsuite.com/ACMECORP_TRN/SX/rest/serviceinterface/proxy/FetchWhere From yor InforOS tenant, create a backend service and downlod the .ionapi credential file. Save the .ionapi file in the config folder. You can name it anything you like and even save it anywhere you want but you will have to change the path and name in the config.ini file to point to the correct location and file. config/ mycredentials.ionapi Edit this line to point to your file. ionapi_file = ./config/mycredentials.ionapi Editing the payload You'll find the various payloads in the payloads folder. They are just examples that you can use or modify freely to suite your needs. payloads/ sasc.json sasoo.json sasp.json vaeh.json Example: SASOO request { \"CompanyNumber\": 1000, \"Operator\": \"sys\", \"TableName\": \"sasoo\", \"WhereClause\": \"cono = 1000 and oper2 = 'RT01'\", \"BatchSize\": 0, \"RestartRowID\": \"\" } Once you have the repository cloned or downloaded and your payload(s) setup, make sure you have adequate permissions on the root directory the code is installed in and proceed to Running the code","title":"Setup"},{"location":"setup/#fetchwhere-app","text":"","title":"Fetchwhere App"},{"location":"setup/#commands","text":"The simplest way to get started is to clone this repository to a local directory. git clone https://github.com/NSA-Computer-Exchange/Fetchwhere_App","title":"Commands"},{"location":"setup/#download","text":"If you don't have git installed, you can download the files in .zip format: Expand the green \"Code\" button. Select Download ZIP at the bottom. For more information on cloning a repository, here's a good read: Cloning a repository","title":"Download"},{"location":"setup/#config","text":"You'll need to edit the config.ini file so it points to your tenant and your .ionapi credential file. config/ config.ini Edit this line: conoFetchUrl = https://mingle-ionapi.inforcloudsuite.com/TENANT_TRN/SX/rest/serviceinterface/proxy/FetchWhere Replace the TENANT_TRN value in the Fetchwhere URL with your tenant. Example: https://mingle-ionapi.inforcloudsuite.com/ACMECORP_TRN/SX/rest/serviceinterface/proxy/FetchWhere From yor InforOS tenant, create a backend service and downlod the .ionapi credential file. Save the .ionapi file in the config folder. You can name it anything you like and even save it anywhere you want but you will have to change the path and name in the config.ini file to point to the correct location and file. config/ mycredentials.ionapi Edit this line to point to your file. ionapi_file = ./config/mycredentials.ionapi","title":"Config"},{"location":"setup/#editing-the-payload","text":"You'll find the various payloads in the payloads folder. They are just examples that you can use or modify freely to suite your needs. payloads/ sasc.json sasoo.json sasp.json vaeh.json Example: SASOO request { \"CompanyNumber\": 1000, \"Operator\": \"sys\", \"TableName\": \"sasoo\", \"WhereClause\": \"cono = 1000 and oper2 = 'RT01'\", \"BatchSize\": 0, \"RestartRowID\": \"\" } Once you have the repository cloned or downloaded and your payload(s) setup, make sure you have adequate permissions on the root directory the code is installed in and proceed to Running the code","title":"Editing the payload"},{"location":"whatsnext/","text":"The idea behind making this bit of code public is to provide an example of how to make FetchWhere API calls using Python. It's by no means a complete solution. There's no error checking and you will receive exceptions if things like directory permissions are too tight or if you have no network connectivity or even if the config.ini file entries are not correct. Use at your own risk You are free to modify the python source to suit your own needs, use in your projects or scripts etc. The Fetch.exe was compiled using PyInstaller If you'd like to compile your own updates or changes to the program you can install PyInstaller using pip: pip install pyinstaller As always for any questions or comments, you can reach out to rob.thayer@nsacom.com","title":"What's next"}]}